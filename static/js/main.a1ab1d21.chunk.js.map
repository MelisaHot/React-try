{"version":3,"sources":["Navbar.js","BlogList.js","useFetch.js","Home.js","Create.js","BlogDetails.js","NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","BlogList","blogs","title","map","blog","id","author","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","Home","Create","setTite","body","setBody","setAuthor","history","useHistory","onSubmit","e","preventDefault","method","headers","JSON","stringify","push","type","required","value","onChange","target","disabled","BlogDetails","useParams","onClick","NotFound","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1ab1d21.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (  \r\n        <div className=\"navbar\">\r\n            <h1>The MELISA Blog</h1>\r\n            <div className=\"links\">\r\n                <Link to='/'>Home</Link>\r\n                <Link to='/create'>New blog</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Navbar;","import { Link } from \"react-router-dom\";\r\n\r\n\r\nconst BlogList = ({blogs, title}) => {\r\n    return (  \r\n        <div className=\"blog-list\">\r\n            <h2>{title}</h2>\r\n            {blogs.map((blog) => (\r\n                <div className=\"blog-prewiew\" key={blog.id}>\r\n                    <Link to={`/blogs/${blog.id}`}>\r\n                        <h2>{blog.title}</h2>\r\n                        <p>Written by: { blog.author }</p>\r\n                    </Link>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default BlogList;","import {useState, useEffect} from 'react';\r\n\r\nconst useFetch = (url) => {\r\n    const [data, setData] = useState(null);\r\n    const [isPending, setIsPending] = useState(true);\r\n    const [error, setError] = useState(null);\r\n   \r\n    useEffect(() => {\r\n        const abortCont = new AbortController();\r\n\r\n        fetch(url, {signal: abortCont.signal})\r\n        .then(res =>{\r\n            if(!res.ok){\r\n                throw Error(\"could not fetch data from this resource\");\r\n            }\r\n            return res.json();\r\n        })\r\n        .then( data => {\r\n            setData(data);\r\n            setIsPending(false);\r\n            setError(null);\r\n        })\r\n        .catch(err => {\r\n            if(err.name === \"AbortError\"){\r\n                console.log(\"fetch aborted\");\r\n            } else{\r\n            setIsPending(false);\r\n            setError(err.message);\r\n            }\r\n        });\r\n        return () => abortCont.abort();\r\n    }, [url]);\r\n    return { data, isPending, error }\r\n}\r\n\r\nexport default useFetch;","\r\nimport BlogList from \"./BlogList\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst Home = () => {\r\n    const {data: blogs, isPending, error} = useFetch(' http://localhost:8000/blogs');\r\n    return ( \r\n     \r\n        <div className=\"home\">\r\n\r\n            {error && <div>{error} </div> }\r\n            { isPending && <div>Loading... </div>}\r\n            { blogs &&  < BlogList blogs={blogs} title=\"All blogs.\" />}\r\n           \r\n    \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Home;","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Create = () => {\r\n\r\n    const [title, setTite] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const [author, setAuthor] = useState('Melisa');\r\n    const [isPending, setIsPending] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const blog = {title, body, author}\r\n        setIsPending(true);\r\n\r\n        fetch('http://localhost:8000/blogs', {\r\n            method: 'POST',\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify(blog)\r\n        })\r\n        .then(() => {\r\n            console.log(\"New block added\");\r\n            setIsPending(false);\r\n            history.push('/');\r\n        })\r\n    }\r\n    return ( \r\n        <div className=\"create\">\r\n            <h2>Add new Blog</h2>\r\n            <form onSubmit = {handleSubmit}>\r\n                <label>Blog title: </label>\r\n                <input \r\n                    type=\"text\" \r\n                    required\r\n                    value = {title}\r\n                    onChange = { (e) => setTite(e.target.value)}\r\n                />\r\n\r\n                <label>Blog body: </label>\r\n                <textarea\r\n                    required\r\n                    value = {body}\r\n                    onChange = { (e) => setBody(e.target.value)}\r\n                ></textarea>\r\n                <label > Blog Author: </label>\r\n                <select\r\n                    value = {author}\r\n                    onChange= {(e) => setAuthor(e.target.value)}\r\n                >\r\n                    <option value=\"Melisa\">Melisa</option>\r\n                    <option value=\"Almin\">Almin</option>\r\n                </select>\r\n                {!isPending && <button> Add Blog </button>}\r\n                {isPending && <button disabled>Adding blog... </button> }\r\n                <p>{title}</p>\r\n                <p>{body}</p>\r\n                <p>{author}</p>\r\n            </form>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Create;","import { useHistory, useParams } from \"react-router\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst BlogDetails = () => {\r\n    const {id} = useParams();\r\n    const {data: blog, error, isPending} = useFetch('http://localhost:8000/blogs/' +id);\r\n    const history = useHistory();\r\n\r\n    const handleClick = () => {\r\n        fetch('http://localhost:8000/blogs/' +blog.id,{\r\n            method: 'DELETE'\r\n        })\r\n        .then (() => {\r\n            history.push('/');\r\n        })\r\n    }\r\n    return ( \r\n        <div className=\"blog-details\">\r\n            {isPending && <div> Loading... </div> }\r\n            {error && <div> {error} </div> }\r\n            {blog && (\r\n                <article>\r\n                    <h2>{blog.title}</h2>\r\n                    <p>Written by {blog.author}</p>\r\n                    <div>{blog.body}</div>\r\n                    <button onClick = {handleClick} > Delete </button>\r\n                </article>\r\n            )\r\n            }\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default BlogDetails;","import { Link } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n    return (  \r\n        <div className=\"not-found\">\r\n            <h2>Sorry</h2>\r\n            <p>That page cannoy be found!</p>\r\n            <Link to='/'>Back to homepage...</Link>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default NotFound;","import Navbar from \"./Navbar\";\nimport Home from './Home';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Create from './Create';\nimport BlogDetails from './BlogDetails';\nimport NotFound from './NotFound';\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <Navbar />\n      <div className=\"content\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/React-try\">\n            <Home />\n          </Route>\n          <Route path=\"/create\">\n            <Create />\n          </Route>\n          <Route path=\"/blogs/:id\">\n            <BlogDetails />\n          </Route>\n          <Route path=\"*\">\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}